{"ast":null,"code":"/**\n * @module color-space/hsl\n */\nimport rgb from './rgb.js';\nexport default {\n  name: 'hsl',\n  min: [0, 0, 0],\n  max: [360, 100, 100],\n  channel: ['hue', 'saturation', 'lightness'],\n  alias: ['HSL'],\n  rgb: function (hsl) {\n    var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1,\n      t2,\n      t3,\n      rgb,\n      val,\n      i = 0;\n    if (s === 0) return val = l * 255, [val, val, val];\n    t2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    t1 = 2 * l - t2;\n    rgb = [0, 0, 0];\n    for (; i < 3;) {\n      t3 = h + 1 / 3 * -(i - 1);\n      t3 < 0 ? t3++ : t3 > 1 && t3--;\n      val = 6 * t3 < 1 ? t1 + (t2 - t1) * 6 * t3 : 2 * t3 < 1 ? t2 : 3 * t3 < 2 ? t1 + (t2 - t1) * (2 / 3 - t3) * 6 : t1;\n      rgb[i++] = val * 255;\n    }\n    return rgb;\n  }\n};\n\n//extend rgb\nrgb.hsl = function (rgb) {\n  var r = rgb[0] / 255,\n    g = rgb[1] / 255,\n    b = rgb[2] / 255,\n    min = Math.min(r, g, b),\n    max = Math.max(r, g, b),\n    delta = max - min,\n    h,\n    s,\n    l;\n  if (max === min) {\n    h = 0;\n  } else if (r === max) {\n    h = (g - b) / delta;\n  } else if (g === max) {\n    h = 2 + (b - r) / delta;\n  } else if (b === max) {\n    h = 4 + (r - g) / delta;\n  }\n  h = Math.min(h * 60, 360);\n  if (h < 0) {\n    h += 360;\n  }\n  l = (min + max) / 2;\n  if (max === min) {\n    s = 0;\n  } else if (l <= 0.5) {\n    s = delta / (max + min);\n  } else {\n    s = delta / (2 - max - min);\n  }\n  return [h, s * 100, l * 100];\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}