{"ast":null,"code":"import OlMap from 'ol/Map';\nimport OlXYZ from 'ol/source/XYZ';\nimport OlTileLayer from 'ol/layer/Tile';\nimport OlView from 'ol/View';\nimport Feature from 'ol/Feature';\nimport Point from 'ol/geom/Point';\nimport VectorSource from 'ol/source/Vector';\nimport { Vector as VectorLayer } from 'ol/layer';\nimport { Icon, Style, Fill } from 'ol/style';\nimport { Circle } from 'ol/geom';\nimport { fromLonLat } from 'ol/proj';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/ubicaciones/ubicacion.service\";\nimport * as i2 from \"src/app/services/comunicacion/comunicacion.service\";\nimport * as i3 from \"ngx-toastr\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@ng-bootstrap/ng-bootstrap\";\nfunction RutinasComponent_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const dia_r1 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", dia_r1, \" \");\n  }\n}\nexport let RutinasComponent = /*#__PURE__*/(() => {\n  class RutinasComponent {\n    ubicacionService;\n    comunicacion;\n    toastr;\n    //VARIABLES PARA LOS PICKER \n    dias = ['Domingo', 'Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado'];\n    time = {\n      hour: 13,\n      minute: 30,\n      second: 0\n    };\n    diaSeleccionado = \"Lunes\";\n    //VARIABLES DE LOGICA\n    ubicacionPromedio;\n    victimarioSeleccionado;\n    seleccioneRestriccion = false;\n    ubicacionesRestriccion;\n    //VARIABLES PARA EL MAPA\n    map;\n    mapSource;\n    capaMapa;\n    vistaMapa;\n    vectorUbicaciones;\n    capaUbicaciones;\n    constructor(ubicacionService, comunicacion, toastr) {\n      this.ubicacionService = ubicacionService;\n      this.comunicacion = comunicacion;\n      this.toastr = toastr;\n    }\n    ngOnInit() {\n      this.iniciarMapa();\n      if (this.comunicacion.restriccionDTO != null) {\n        var victimario = this.comunicacion.restriccionDTO.victimario;\n        this.victimarioSeleccionado = victimario.apellido + \", \" + victimario.nombre;\n        this.seleccioneRestriccion = true;\n      }\n    }\n    iniciarMapa() {\n      //Fuente del mapa,\n      this.mapSource = new OlXYZ({\n        url: 'http://tile.osm.org/{z}/{x}/{y}.png'\n      });\n      //Capa para mostrar el mapa\n      this.capaMapa = new OlTileLayer({\n        source: this.mapSource\n      });\n      //Centro el mapa en la UNGS O en cualquier lado\n      this.vistaMapa = new OlView({\n        center: fromLonLat([-58.700233, -34.522249]),\n        zoom: 17\n      });\n      //Creo el mapa con las capas y la vista\n      this.map = new OlMap({\n        target: 'map',\n        layers: [this.capaMapa],\n        view: this.vistaMapa\n      });\n    }\n    mostrarRutina() {\n      this.ubicacionService.getUbicacionesRestriccion(this.comunicacion.restriccionDTO.restriccion.idRestriccion).subscribe(res => {\n        this.ubicacionesRestriccion = res;\n        ;\n        this.ubicacionService.getUbicacionPromedioRutina(this.comunicacion.restriccionDTO.victimario.idPersona, this.dias.indexOf(this.diaSeleccionado) + 1, this.time.hour, this.time.minute).subscribe(res => {\n          this.ubicacionPromedio = res;\n          //Si no hay ubicación promedio NULL\n          if (this.ubicacionPromedio == null) {\n            this.toastr.error(\"No hay ubicación rutinaria para los datos seleccionados\");\n            return;\n          }\n          var markerVictimario;\n          var perimetro;\n          //Marco Victimario con su marker La longitud y latitud es de objeto Ubicacion\n          markerVictimario = new Feature({\n            geometry: new Point(fromLonLat([this.ubicacionesRestriccion.ubicacionVictimario.longitud, this.ubicacionesRestriccion.ubicacionVictimario.latitud]))\n          });\n          markerVictimario.setStyle(new Style({\n            image: new Icon({\n              src: 'assets/markerVictimario.png'\n              // imgSize: [60, 60]\n            })\n          }));\n          //Dibujo Perimetro de ubicacionRutinaria con el estilo\n          perimetro = new Feature();\n          var forma = new Circle(fromLonLat([this.ubicacionPromedio.longitud, this.ubicacionPromedio.latitud]));\n          forma.setRadius(200);\n          perimetro.setGeometry(forma);\n          perimetro.setStyle(new Style({\n            fill: new Fill({\n              color: [10, 20, 255, .6]\n            })\n          }));\n          //Borro lo dibujado anteriormente en el mapa\n          var layers = this.map.getLayers().getArray();\n          for (var i = layers.length - 1; i >= 1; --i) {\n            var layer = layers[i];\n            this.map.removeLayer(layer);\n          }\n          //Creo el vector y capa para mostrar Area rutinaria y la ubicacion\n          this.vectorUbicaciones = new VectorSource({\n            features: [markerVictimario, perimetro]\n          });\n          this.capaUbicaciones = new VectorLayer({\n            source: this.vectorUbicaciones\n          });\n          //CENTRO EL MAPA EN LA UBICACION VICTIMARIO Y AÑADO LA CAPA\n          this.vistaMapa.setCenter(fromLonLat([this.ubicacionesRestriccion.ubicacionVictimario.longitud, this.ubicacionesRestriccion.ubicacionVictimario.latitud]));\n          this.map.addLayer(this.capaUbicaciones);\n        });\n      });\n    }\n    static ɵfac = function RutinasComponent_Factory(t) {\n      return new (t || RutinasComponent)(i0.ɵɵdirectiveInject(i1.UbicacionService), i0.ɵɵdirectiveInject(i2.ComunicacionService), i0.ɵɵdirectiveInject(i3.ToastrService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RutinasComponent,\n      selectors: [[\"app-rutinas\"]],\n      decls: 19,\n      vars: 7,\n      consts: [[1, \"general\"], [1, \"opciones-victimario\"], [1, \"col-10\"], [1, \"card\", \"bg-light\", \"mb-3\"], [1, \"card-body\"], [1, \"row\"], [1, \"form-group\", \"btn-block\"], [\"name\", \"dia\", \"ngbTooltip\", \"D\\u00EDa de rutina\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [4, \"ngFor\", \"ngForOf\"], [\"ngbTooltip\", \"Horario de rutina\", \"name\", \"horario\", \"readonlyInputs\", \"true\", 1, \"reloj\", 3, \"ngModelChange\", \"ngModel\", \"hourStep\", \"minuteStep\"], [1, \"btn\", \"btn-primary\", \"btn-block\", 3, \"click\", \"disabled\"], [\"id\", \"map\", 1, \"map\"]],\n      template: function RutinasComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"legend\");\n          i0.ɵɵtext(6, \"Rutina\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"legend\");\n          i0.ɵɵtext(8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"form\")(10, \"div\", 5)(11, \"div\", 6)(12, \"select\", 7);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function RutinasComponent_Template_select_ngModelChange_12_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.diaSeleccionado, $event) || (ctx.diaSeleccionado = $event);\n            return $event;\n          });\n          i0.ɵɵtemplate(13, RutinasComponent_option_13_Template, 2, 1, \"option\", 8);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(14, \"div\", 5)(15, \"ngb-timepicker\", 9);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function RutinasComponent_Template_ngb_timepicker_ngModelChange_15_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.time, $event) || (ctx.time = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(16, \"button\", 10);\n          i0.ɵɵlistener(\"click\", function RutinasComponent_Template_button_click_16_listener() {\n            return ctx.mostrarRutina();\n          });\n          i0.ɵɵtext(17, \"Ver \\u00E1rea rutinaria\");\n          i0.ɵɵelementEnd()()()()()();\n          i0.ɵɵelement(18, \"div\", 11);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(8);\n          i0.ɵɵtextInterpolate(ctx.victimarioSeleccionado);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.diaSeleccionado);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngForOf\", ctx.dias);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.time);\n          i0.ɵɵproperty(\"hourStep\", 1)(\"minuteStep\", 30);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", !ctx.seleccioneRestriccion);\n        }\n      },\n      dependencies: [i4.NgForOf, i5.ɵNgNoValidate, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.NgModel, i5.NgForm, i6.NgbTimepicker, i6.NgbTooltip],\n      styles: [\".general[_ngcontent-%COMP%]{margin:auto;width:99%;height:800px;color:#053667}.opciones-victimario[_ngcontent-%COMP%]{float:left;width:30%;height:100%}.card[_ngcontent-%COMP%]{margin-top:30%;text-align:center}.map[_ngcontent-%COMP%]{float:left;width:70%;height:100%}.reloj[_ngcontent-%COMP%]{margin:auto}\"]\n    });\n  }\n  return RutinasComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}