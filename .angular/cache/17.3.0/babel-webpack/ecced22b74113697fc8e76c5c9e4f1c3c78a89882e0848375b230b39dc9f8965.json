{"ast":null,"code":"import { RestriccionService } from '../../services/restricciones/restriccion.service';\nimport OlMap from 'ol/Map';\nimport OlXYZ from 'ol/source/XYZ';\nimport OlTileLayer from 'ol/layer/Tile';\nimport OlView from 'ol/View';\nimport Feature from 'ol/Feature';\nimport Point from 'ol/geom/Point';\nimport VectorSource from 'ol/source/Vector';\nimport { Vector as VectorLayer } from 'ol/layer';\nimport { Icon, Style, Fill } from 'ol/style';\nimport { Circle } from 'ol/geom';\nimport { fromLonLat } from 'ol/proj';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/restricciones/restriccion.service\";\nimport * as i2 from \"src/app/services/comunicacion/comunicacion.service\";\nimport * as i3 from \"src/app/services/ubicaciones/ubicacion.service\";\nimport * as i4 from \"ngx-spinner\";\nimport * as i5 from \"src/app/services/login/usuario.service\";\nimport * as i6 from \"@angular/common\";\nfunction RestriccionesComponent_tr_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 9);\n    i0.ɵɵlistener(\"click\", function RestriccionesComponent_tr_13_Template_tr_click_0_listener() {\n      const restriccion_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.seleccionarRestriccion(restriccion_r2));\n    });\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const restriccion_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(restriccion_r2.victimario.apellido);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(restriccion_r2.damnificada.apellido);\n  }\n}\nexport let RestriccionesComponent = /*#__PURE__*/(() => {\n  class RestriccionesComponent {\n    constructor(restriccionService, comunicacion, ubicacionService, spinnerService, usuarioService) {\n      this.restriccionService = restriccionService;\n      this.comunicacion = comunicacion;\n      this.ubicacionService = ubicacionService;\n      this.spinnerService = spinnerService;\n      this.usuarioService = usuarioService;\n    }\n    ngOnInit() {\n      this.getRestricciones(localStorage.getItem(\"emailUsuario\"));\n      this.getUsuarioByEmail(localStorage.getItem(\"emailUsuario\"));\n      this.iniciarMapa();\n      console.log(this.comunicacion.administrativo.email);\n    }\n    getRestricciones(email) {\n      this.spinnerService.show();\n      this.restriccionService.getRestriccionesAdministrativo(email).subscribe(res => {\n        this.spinnerService.hide();\n        this.restriccionService.restricciones = res;\n        console.log(res);\n      });\n    }\n    seleccionarRestriccion(restriccion) {\n      this.comunicacion.enviarRestriccion(restriccion);\n      this.mostrarRestriccion();\n      let thisjr = this;\n      //CADA 15 SEGUNDOS ACTUALIZO EL MAPA\n      clearInterval(this.intervalo);\n      this.intervalo = setInterval(function () {\n        thisjr.mostrarRestriccion();\n      }, 15000);\n    }\n    getUsuarioByEmail(mail) {\n      this.usuarioService.getUsuarioByEmail(mail).subscribe(res => {\n        this.comunicacion.enviarUsuario(res);\n      });\n    }\n    iniciarMapa() {\n      //Fuente del mapa,\n      this.mapSource = new OlXYZ({\n        url: 'http://tile.osm.org/{z}/{x}/{y}.png'\n      });\n      //Capa para mostrar el mapa\n      this.capaMapa = new OlTileLayer({\n        source: this.mapSource\n      });\n      //Centro el mapa en la UNGS O en cualquier lado\n      this.vistaMapa = new OlView({\n        center: fromLonLat([-58.700233, -34.522249]),\n        zoom: 17\n      });\n      //Creo el mapa con las capas y la vista\n      this.map = new OlMap({\n        target: 'map',\n        layers: [this.capaMapa],\n        view: this.vistaMapa\n      });\n    }\n    mostrarRestriccion() {\n      var markerVictimario;\n      var markerDamnificada;\n      var perimetro;\n      //GET UBICACIONES Y SET the this.ubicaciones\n      this.ubicacionService.getUbicacionesRestriccion(this.comunicacion.restriccionDTO.restriccion.idRestriccion).subscribe(res => {\n        this.ubicacionDto = res;\n        this.ubicacionDamnificada = this.ubicacionDto.ubicacionDamnificada;\n        this.ubicacionVictimario = this.ubicacionDto.ubicacionVictimario;\n        //Marco Ubicaciones en Mapa\n        //Marco Victimario con su marker La longitud y latitud es de objeto Ubicacion\n        markerVictimario = new Feature({\n          geometry: new Point(fromLonLat([this.ubicacionVictimario.longitud, this.ubicacionVictimario.latitud]))\n        });\n        markerVictimario.setStyle(new Style({\n          image: new Icon({\n            src: 'assets/markerVictimario.png',\n            imgSize: [60, 60]\n          })\n        }));\n        //Marco Damnificada con su marker La longitud y latitud es de objeto Ubicacion\n        markerDamnificada = new Feature({\n          geometry: new Point(fromLonLat([this.ubicacionDamnificada.longitud, this.ubicacionDamnificada.latitud]))\n        });\n        markerDamnificada.setStyle(new Style({\n          image: new Icon({\n            src: 'assets/markerDamnificada.png',\n            imgSize: [60, 60]\n          })\n        }));\n        //Dibujo Circulo y le aplico un estilo \n        perimetro = new Feature();\n        var forma = new Circle(fromLonLat([this.ubicacionDamnificada.longitud, this.ubicacionDamnificada.latitud]));\n        forma.setRadius(this.comunicacion.restriccionDTO.restriccion.distancia);\n        perimetro.setGeometry(forma);\n        this.pintarPerimetro(perimetro);\n        //Borro lo dibujado anteriormente en el mapa\n        var layers = this.map.getLayers().getArray();\n        for (var i = layers.length - 1; i >= 1; --i) {\n          var layer = layers[i];\n          this.map.removeLayer(layer);\n        }\n        //Creo el vector y capa para mostrar las ubicaciones\n        this.vectorUbicaciones = new VectorSource({\n          features: [markerVictimario, markerDamnificada, perimetro]\n        });\n        this.capaUbicaciones = new VectorLayer({\n          source: this.vectorUbicaciones\n        });\n        //CENTRO EL MAPA EN LA UBICACION DE LA DAMNIFICADA Y AÑADO LA CAPA\n        this.vistaMapa.setCenter(fromLonLat([this.ubicacionDamnificada.longitud, this.ubicacionDamnificada.latitud]));\n        this.map.addLayer(this.capaUbicaciones);\n      });\n    }\n    pintarPerimetro(perimetro) {\n      //Pinto el perimetro dependiendo si infringe o no\n      var style = new Style({\n        fill: new Fill({})\n      });\n      this.ubicacionService.getEstaInfringiendo(this.comunicacion.restriccionDTO.restriccion.idRestriccion, this.ubicacionDto).subscribe(res => {\n        var estaInfringiendo = res;\n        if (estaInfringiendo) style.getFill().setColor([255, 0, 0, .4]);else style.getFill().setColor([0, 255, 0, .4]);\n        perimetro.setStyle(style);\n      });\n    }\n    static #_ = this.ɵfac = function RestriccionesComponent_Factory(t) {\n      return new (t || RestriccionesComponent)(i0.ɵɵdirectiveInject(i1.RestriccionService), i0.ɵɵdirectiveInject(i2.ComunicacionService), i0.ɵɵdirectiveInject(i3.UbicacionService), i0.ɵɵdirectiveInject(i4.NgxSpinnerService), i0.ɵɵdirectiveInject(i5.UsuarioService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RestriccionesComponent,\n      selectors: [[\"app-restricciones\"]],\n      features: [i0.ɵɵProvidersFeature([RestriccionService])],\n      decls: 15,\n      vars: 1,\n      consts: [[1, \"general\"], [\"type\", \"ball-clip-rotate\", \"size\", \"medium\", \"bdColor\", \"rgba(51,51,51,0.3)\", \"color\", \"#26294D\"], [2, \"font-size\", \"15px\", \"font-weight\", \"bold\", \"color\", \"#26294D\"], [1, \"lista-restricciones\"], [1, \"table\", \"table-striped\"], [1, \"thead-dark\"], [\"scope\", \"col\"], [3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"map\", 1, \"map\"], [3, \"click\"]],\n      template: function RestriccionesComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"ngx-spinner\", 1)(2, \"p\", 2);\n          i0.ɵɵtext(3, \"Cargando...\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(4, \"div\", 3)(5, \"table\", 4)(6, \"thead\", 5)(7, \"tr\")(8, \"th\", 6);\n          i0.ɵɵtext(9, \"Victimario\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"th\", 6);\n          i0.ɵɵtext(11, \"Damnificada\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(12, \"tbody\");\n          i0.ɵɵtemplate(13, RestriccionesComponent_tr_13_Template, 5, 2, \"tr\", 7);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelement(14, \"div\", 8);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(13);\n          i0.ɵɵproperty(\"ngForOf\", ctx.restriccionService.restricciones);\n        }\n      },\n      dependencies: [i6.NgForOf, i4.NgxSpinnerComponent],\n      styles: [\".general[_ngcontent-%COMP%]{margin:auto;width:99%;height:600px}.lista-restricciones[_ngcontent-%COMP%]{float:left;width:30%;height:100%}.table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:hover{background-color:azure;cursor:pointer}.map[_ngcontent-%COMP%]{float:left;width:70%;height:100%}.spinner-grow[_ngcontent-%COMP%]{position:fixed;margin-top:20%;z-index:9999}\"]\n    });\n  }\n  return RestriccionesComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}